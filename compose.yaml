# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
      target: final
    ports:
      - 8082:8082
    environment:
      - GRPC_GO_CHATROOM_DBHOST=${GRPC_GO_CHATROOM_DBHOST:?DBHOST must be set}
      - GRPC_GO_CHATROOM_DBPORT=${GRPC_GO_CHATROOM_DBPORT:?DBPORT must be set}
      - GRPC_GO_CHATROOM_DBNAME=${GRPC_GO_CHATROOM_DBNAME:?DBNAME must be set}
      - GRPC_GO_CHATROOM_DBUSER=${GRPC_GO_CHATROOM_DBUSER:?DBUSER must be set}
    secrets:
      - jwt-key
      - db-password
    depends_on:
      db:
        condition: service_healthy
  db:
    image: mysql
    restart: always
    user: root
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    environment: GRPC_GO_CHATROOM_DBPASS
  jwt-key:
    environment: GRPC_GO_CHATROOM_JWT_KEY
